== README
This is a Ruby on Rails sample application which allows a user to create electronic cheques.

When a user(customer / issuer), enters the following :Recipient Name, Date, nominal value (amount in numbers), eg.123.45, the application should convert and display amount in words(One Hundred Twenty Three Dollars and Forty Five Cents.) along with Recipient Name and Date.


User Stories:
* Creating a new cheque
* Listing all cheques
* Filtering cheques by Recipient
* Viewing a cheque

=== THINGS TO DO
==== Additional features that can be added to enhance the app
- Authentication
- Cheques as PDF
- Cheque templates
- Recurring Cheques
- Support multiple accounts (for sourcing the funds)
- Forex cheques (including forex conversions)
- Digital Signatures
- Better validation
- Email notifications to cheque issuer (when cheque is deposited/encashed)
- Cancel cheques
- Link to Bank
- Reports
- Cheque amount limits based on user

=== TOOLS
* CI : Semaphore
* Deployment : Heroku app

==== Acknowledgements
* Stackoverflow - All those guys who took time to answer & clarify questions over time
* www.w3schools.com
* www.getbootstrap.com
* Ryan Bigg for 'Humanize' gem - To convert amount to amount in words
* www.learneroo.com - Rails tutorials
* www.gotealeaf.com - Integrating rails and bootstrap
* Akshay Mohite @ https://hackhands.com - Format date time in ruby
* Samer Buna @ www.pluralsight.com - ruby on rails 4 tutorials
* Jordan Hudgens @ www.udemy.com - Comprehesive Ruby On Rails
* guides.rubyonrails.org
* www.tutorialspoint.com - Ruby on Rails Models
* www.railscasts.com - associations in Rails
* Sang Shin @ www.jpassion.com - Ruby on Rails course (youtube)
* www.minspill.net - rake tasks cheat sheet
* www.tutorials.railsapps.github.io - Ruby on Rails tutorials
* www.color-hex.com - hex codes for css styling
* Jan Varljen @ https://infinum.co - Setting up ROR continuous integration process